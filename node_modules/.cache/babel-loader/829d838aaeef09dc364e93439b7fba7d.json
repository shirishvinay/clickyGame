{"ast":null,"code":"var _jsxFileName = \"/Users/vinay/Documents/HW/clickyGame/clicky-game/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport { Row, CardPanel, Col } from 'react-materialize';\nimport { faSmile, faFrown, faBell, faCalendar, faEnvelope, faEnvelopeOpen, faNewspaper, faSnowflake, faBellSlash, faCompass, faEye, faFileAlt } from '@fortawesome/free-regular-svg-icons';\nimport GamePiece from './components/GamePiece';\nimport Nav from './components/Nav/Nav';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      icons: [faSmile, faFrown, faBell, faCalendar, faEnvelope, faEnvelopeOpen, faNewspaper, faSnowflake, faBellSlash, faCompass, faEye, faFileAlt].sort(this.randomize),\n      clicked: [],\n      score: 0,\n      highScore: 0,\n      correct: undefined,\n      gameWon: false\n    };\n\n    this.randomize = (a, b) => Math.random() > .5 ? -1 : 1;\n\n    this.clickHandler = iconName => {\n      if (this.state.clicked.indexOf(iconName) === -1) {\n        let score = this.state.clicked.length + 1,\n            clicked = score === this.state.icons.length ? [] : [...this.state.clicked, iconName];\n        this.setState({\n          icons: this.state.icons.sort(this.randomize),\n          clicked: clicked,\n          score: score,\n          highScore: Math.max(this.state.highScore, score),\n          correct: true,\n          gameWon: score === this.state.icons.length\n        });\n      } else {\n        this.setState({\n          icons: this.state.icons.sort(this.randomize),\n          clicked: [],\n          score: 0,\n          correct: false,\n          gameWon: false\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      correct: this.state.correct,\n      gameWon: this.state.gameWon,\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(CardPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Click on an image to earn points, but don't click on any more than once!\"))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.icons.map(icon => React.createElement(GamePiece, {\n      correct: this.state.correct,\n      key: icon.iconName,\n      icon: icon,\n      clickHandler: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vinay/Documents/HW/clickyGame/clicky-game/clicky-game/src/App.js"],"names":["React","Component","Row","CardPanel","Col","faSmile","faFrown","faBell","faCalendar","faEnvelope","faEnvelopeOpen","faNewspaper","faSnowflake","faBellSlash","faCompass","faEye","faFileAlt","GamePiece","Nav","App","state","icons","sort","randomize","clicked","score","highScore","correct","undefined","gameWon","a","b","Math","random","clickHandler","iconName","indexOf","length","setState","max","render","map","icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, CardPanel, Col } from 'react-materialize';\nimport { faSmile, faFrown, faBell, faCalendar, faEnvelope, faEnvelopeOpen, faNewspaper, faSnowflake, faBellSlash, faCompass, faEye, faFileAlt } from '@fortawesome/free-regular-svg-icons'\nimport GamePiece from './components/GamePiece';\nimport Nav from './components/Nav/Nav';\n\nclass App extends Component {\n    state = {\n        icons: [faSmile, faFrown, faBell, faCalendar, faEnvelope, faEnvelopeOpen, faNewspaper, faSnowflake, faBellSlash, faCompass, faEye, faFileAlt].sort(this.randomize),\n        clicked: [],\n        score: 0,\n        highScore: 0,\n        correct: undefined,\n        gameWon: false\n    }\n\n    randomize = (a, b) => Math.random() > .5 ? -1 : 1\n\n    clickHandler = iconName => {\n        if (this.state.clicked.indexOf(iconName) === -1) {\n            let score = this.state.clicked.length + 1,\n                clicked = score === this.state.icons.length ? [] : [...this.state.clicked, iconName]\n\n            this.setState({\n                icons: this.state.icons.sort(this.randomize),\n                clicked: clicked,\n                score: score,\n                highScore: Math.max(this.state.highScore, score),\n                correct: true,\n                gameWon: score === this.state.icons.length\n            })\n        } else {\n            this.setState({\n                icons: this.state.icons.sort(this.randomize),\n                clicked: [],\n                score: 0,\n                correct: false,\n                gameWon: false\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <Nav correct={this.state.correct} gameWon={this.state.gameWon} score={this.state.score} highScore={this.state.highScore} />\n                    <Row>\n                        <Col s={12}>\n                            <CardPanel>\n                                <p>Click on an image to earn points, but don't click on any more than once!</p>\n                            </CardPanel>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"container\">\n                    <Row>\n                        {this.state.icons.map(icon => <GamePiece correct={this.state.correct} key={icon.iconName} icon={icon} clickHandler={this.clickHandler} />)}\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}